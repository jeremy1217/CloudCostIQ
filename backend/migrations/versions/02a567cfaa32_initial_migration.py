"""Initial migration

Revision ID: 02a567cfaa32
Revises: 
Create Date: 2025-03-18 21:16:23.243477

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '02a567cfaa32'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_optimization_policies_enabled', table_name='optimization_policies')
    op.drop_index('ix_optimization_policies_id', table_name='optimization_policies')
    op.drop_index('ix_optimization_policies_name', table_name='optimization_policies')
    op.drop_index('ix_optimization_policies_provider', table_name='optimization_policies')
    op.drop_index('ix_optimization_policies_resource_type', table_name='optimization_policies')
    op.drop_index('ix_optimization_policies_service', table_name='optimization_policies')
    op.drop_table('optimization_policies')
    op.drop_index('ix_cloud_cost_id', table_name='cloud_cost')
    op.drop_table('cloud_cost')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_subscriptions_id', table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index('idx_utilization_resource_metric_date', table_name='resource_utilizations')
    op.drop_index('idx_utilization_service_metric_date', table_name='resource_utilizations')
    op.drop_index('ix_resource_utilizations_date', table_name='resource_utilizations')
    op.drop_index('ix_resource_utilizations_id', table_name='resource_utilizations')
    op.drop_index('ix_resource_utilizations_metric_name', table_name='resource_utilizations')
    op.drop_index('ix_resource_utilizations_provider', table_name='resource_utilizations')
    op.drop_index('ix_resource_utilizations_resource_id', table_name='resource_utilizations')
    op.drop_index('ix_resource_utilizations_service', table_name='resource_utilizations')
    op.drop_index('ix_resource_utilizations_timestamp', table_name='resource_utilizations')
    op.drop_table('resource_utilizations')
    op.drop_table('user_role_association')
    op.drop_index('ix_alert_history_acknowledged', table_name='alert_history')
    op.drop_index('ix_alert_history_alert_type', table_name='alert_history')
    op.drop_index('ix_alert_history_anomaly_id', table_name='alert_history')
    op.drop_index('ix_alert_history_budget_id', table_name='alert_history')
    op.drop_index('ix_alert_history_created_at', table_name='alert_history')
    op.drop_index('ix_alert_history_id', table_name='alert_history')
    op.drop_index('ix_alert_history_severity', table_name='alert_history')
    op.drop_table('alert_history')
    op.drop_index('ix_cost_categories_id', table_name='cost_categories')
    op.drop_index('ix_cost_categories_name', table_name='cost_categories')
    op.drop_table('cost_categories')
    op.drop_index('ix_organization_units_external_id', table_name='organization_units')
    op.drop_index('ix_organization_units_id', table_name='organization_units')
    op.drop_index('ix_organization_units_name', table_name='organization_units')
    op.drop_index('ix_organization_units_parent_id', table_name='organization_units')
    op.drop_index('ix_organization_units_path', table_name='organization_units')
    op.drop_table('organization_units')
    op.drop_index('ix_recommendations_id', table_name='recommendations')
    op.drop_table('recommendations')
    op.drop_index('idx_allocation_date_service', table_name='cost_allocations')
    op.drop_index('idx_allocation_entity_date', table_name='cost_allocations')
    op.drop_index('ix_cost_allocations_date', table_name='cost_allocations')
    op.drop_index('ix_cost_allocations_entity_id', table_name='cost_allocations')
    op.drop_index('ix_cost_allocations_entity_name', table_name='cost_allocations')
    op.drop_index('ix_cost_allocations_entity_type', table_name='cost_allocations')
    op.drop_index('ix_cost_allocations_id', table_name='cost_allocations')
    op.drop_index('ix_cost_allocations_provider', table_name='cost_allocations')
    op.drop_index('ix_cost_allocations_service', table_name='cost_allocations')
    op.drop_table('cost_allocations')
    op.drop_index('ix_saved_reports_id', table_name='saved_reports')
    op.drop_index('ix_saved_reports_name', table_name='saved_reports')
    op.drop_index('ix_saved_reports_report_type', table_name='saved_reports')
    op.drop_table('saved_reports')
    op.drop_index('ix_plans_id', table_name='plans')
    op.drop_index('ix_plans_name', table_name='plans')
    op.drop_table('plans')
    op.drop_index('ix_cost_anomalies_created_at', table_name='cost_anomalies')
    op.drop_index('ix_cost_anomalies_date', table_name='cost_anomalies')
    op.drop_index('ix_cost_anomalies_id', table_name='cost_anomalies')
    op.drop_index('ix_cost_anomalies_provider', table_name='cost_anomalies')
    op.drop_index('ix_cost_anomalies_resource_id', table_name='cost_anomalies')
    op.drop_index('ix_cost_anomalies_service', table_name='cost_anomalies')
    op.drop_index('ix_cost_anomalies_status', table_name='cost_anomalies')
    op.drop_table('cost_anomalies')
    op.drop_index('ix_roles_id', table_name='roles')
    op.drop_index('ix_roles_name', table_name='roles')
    op.drop_table('roles')
    op.drop_index('ix_cost_forecasts_created_at', table_name='cost_forecasts')
    op.drop_index('ix_cost_forecasts_id', table_name='cost_forecasts')
    op.drop_index('ix_cost_forecasts_provider', table_name='cost_forecasts')
    op.drop_index('ix_cost_forecasts_service', table_name='cost_forecasts')
    op.drop_index('ix_cost_forecasts_target_date', table_name='cost_forecasts')
    op.drop_table('cost_forecasts')
    op.drop_index('ix_api_keys_id', table_name='api_keys')
    op.drop_index('ix_api_keys_name', table_name='api_keys')
    op.drop_index('ix_api_keys_provider', table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_index('ix_budget_alerts_account_id', table_name='budget_alerts')
    op.drop_index('ix_budget_alerts_id', table_name='budget_alerts')
    op.drop_index('ix_budget_alerts_provider', table_name='budget_alerts')
    op.drop_index('ix_budget_alerts_service', table_name='budget_alerts')
    op.drop_index('ix_budget_alerts_status', table_name='budget_alerts')
    op.drop_table('budget_alerts')
    op.drop_constraint('resource_tags_resource_id_fkey', 'resource_tags', type_='foreignkey')
    op.drop_column('resource_tags', 'resource_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('resource_tags', sa.Column('resource_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('resource_tags_resource_id_fkey', 'resource_tags', 'cloud_resources', ['resource_id'], ['id'])
    op.create_table('budget_alerts',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('budget_alerts_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('service', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('account_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tag_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tag_value', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('time_period', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('threshold_percentage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('current_usage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('last_evaluated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email_recipients', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('webhook_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='budget_alerts_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_budget_alerts_status', 'budget_alerts', ['status'], unique=False)
    op.create_index('ix_budget_alerts_service', 'budget_alerts', ['service'], unique=False)
    op.create_index('ix_budget_alerts_provider', 'budget_alerts', ['provider'], unique=False)
    op.create_index('ix_budget_alerts_id', 'budget_alerts', ['id'], unique=False)
    op.create_index('ix_budget_alerts_account_id', 'budget_alerts', ['account_id'], unique=False)
    op.create_table('api_keys',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('key_hash', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('encrypted_credentials', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_used', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='api_keys_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='api_keys_pkey')
    )
    op.create_index('ix_api_keys_provider', 'api_keys', ['provider'], unique=False)
    op.create_index('ix_api_keys_name', 'api_keys', ['name'], unique=False)
    op.create_index('ix_api_keys_id', 'api_keys', ['id'], unique=False)
    op.create_table('cost_forecasts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('service', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('target_date', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('predicted_cost', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('lower_bound', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('upper_bound', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('confidence', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('algorithm', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('data_points_used', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='cost_forecasts_pkey')
    )
    op.create_index('ix_cost_forecasts_target_date', 'cost_forecasts', ['target_date'], unique=False)
    op.create_index('ix_cost_forecasts_service', 'cost_forecasts', ['service'], unique=False)
    op.create_index('ix_cost_forecasts_provider', 'cost_forecasts', ['provider'], unique=False)
    op.create_index('ix_cost_forecasts_id', 'cost_forecasts', ['id'], unique=False)
    op.create_index('ix_cost_forecasts_created_at', 'cost_forecasts', ['created_at'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('roles_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('permissions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_roles_name', 'roles', ['name'], unique=True)
    op.create_index('ix_roles_id', 'roles', ['id'], unique=False)
    op.create_table('cost_anomalies',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('cost_anomalies_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('service', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('resource_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('cost', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('baseline_cost', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('deviation', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('anomaly_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('detection_method', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('resolution', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('root_cause', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('cloud_context', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='cost_anomalies_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_cost_anomalies_status', 'cost_anomalies', ['status'], unique=False)
    op.create_index('ix_cost_anomalies_service', 'cost_anomalies', ['service'], unique=False)
    op.create_index('ix_cost_anomalies_resource_id', 'cost_anomalies', ['resource_id'], unique=False)
    op.create_index('ix_cost_anomalies_provider', 'cost_anomalies', ['provider'], unique=False)
    op.create_index('ix_cost_anomalies_id', 'cost_anomalies', ['id'], unique=False)
    op.create_index('ix_cost_anomalies_date', 'cost_anomalies', ['date'], unique=False)
    op.create_index('ix_cost_anomalies_created_at', 'cost_anomalies', ['created_at'], unique=False)
    op.create_table('plans',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('plans_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('features', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('limits', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='plans_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_plans_name', 'plans', ['name'], unique=True)
    op.create_index('ix_plans_id', 'plans', ['id'], unique=False)
    op.create_table('saved_reports',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('report_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('filters', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('grouping', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('time_range', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('visualization', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_scheduled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('schedule', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='saved_reports_pkey')
    )
    op.create_index('ix_saved_reports_report_type', 'saved_reports', ['report_type'], unique=False)
    op.create_index('ix_saved_reports_name', 'saved_reports', ['name'], unique=False)
    op.create_index('ix_saved_reports_id', 'saved_reports', ['id'], unique=False)
    op.create_table('cost_allocations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('entity_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('entity_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('entity_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('service', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cost', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('allocation_method', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('allocated_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='cost_allocations_pkey')
    )
    op.create_index('ix_cost_allocations_service', 'cost_allocations', ['service'], unique=False)
    op.create_index('ix_cost_allocations_provider', 'cost_allocations', ['provider'], unique=False)
    op.create_index('ix_cost_allocations_id', 'cost_allocations', ['id'], unique=False)
    op.create_index('ix_cost_allocations_entity_type', 'cost_allocations', ['entity_type'], unique=False)
    op.create_index('ix_cost_allocations_entity_name', 'cost_allocations', ['entity_name'], unique=False)
    op.create_index('ix_cost_allocations_entity_id', 'cost_allocations', ['entity_id'], unique=False)
    op.create_index('ix_cost_allocations_date', 'cost_allocations', ['date'], unique=False)
    op.create_index('idx_allocation_entity_date', 'cost_allocations', ['entity_type', 'entity_id', 'date'], unique=False)
    op.create_index('idx_allocation_date_service', 'cost_allocations', ['date', 'service'], unique=False)
    op.create_table('recommendations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('service', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('suggestion', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('command', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('savings', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('applied', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='recommendations_pkey')
    )
    op.create_index('ix_recommendations_id', 'recommendations', ['id'], unique=False)
    op.create_table('organization_units',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('external_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('account_ids', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('meta_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['organization_units.id'], name='organization_units_parent_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='organization_units_pkey')
    )
    op.create_index('ix_organization_units_path', 'organization_units', ['path'], unique=False)
    op.create_index('ix_organization_units_parent_id', 'organization_units', ['parent_id'], unique=False)
    op.create_index('ix_organization_units_name', 'organization_units', ['name'], unique=False)
    op.create_index('ix_organization_units_id', 'organization_units', ['id'], unique=False)
    op.create_index('ix_organization_units_external_id', 'organization_units', ['external_id'], unique=False)
    op.create_table('cost_categories',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('rules', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='cost_categories_pkey')
    )
    op.create_index('ix_cost_categories_name', 'cost_categories', ['name'], unique=False)
    op.create_index('ix_cost_categories_id', 'cost_categories', ['id'], unique=False)
    op.create_table('alert_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('budget_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('anomaly_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('alert_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('severity', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('acknowledged', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('acknowledged_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('acknowledged_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['anomaly_id'], ['cost_anomalies.id'], name='alert_history_anomaly_id_fkey'),
    sa.ForeignKeyConstraint(['budget_id'], ['budget_alerts.id'], name='alert_history_budget_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='alert_history_pkey')
    )
    op.create_index('ix_alert_history_severity', 'alert_history', ['severity'], unique=False)
    op.create_index('ix_alert_history_id', 'alert_history', ['id'], unique=False)
    op.create_index('ix_alert_history_created_at', 'alert_history', ['created_at'], unique=False)
    op.create_index('ix_alert_history_budget_id', 'alert_history', ['budget_id'], unique=False)
    op.create_index('ix_alert_history_anomaly_id', 'alert_history', ['anomaly_id'], unique=False)
    op.create_index('ix_alert_history_alert_type', 'alert_history', ['alert_type'], unique=False)
    op.create_index('ix_alert_history_acknowledged', 'alert_history', ['acknowledged'], unique=False)
    op.create_table('user_role_association',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='user_role_association_role_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_role_association_user_id_fkey')
    )
    op.create_table('resource_utilizations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('resource_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('service', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('metric_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('metric_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('metric_unit', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('period', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('statistic', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='resource_utilizations_pkey')
    )
    op.create_index('ix_resource_utilizations_timestamp', 'resource_utilizations', ['timestamp'], unique=False)
    op.create_index('ix_resource_utilizations_service', 'resource_utilizations', ['service'], unique=False)
    op.create_index('ix_resource_utilizations_resource_id', 'resource_utilizations', ['resource_id'], unique=False)
    op.create_index('ix_resource_utilizations_provider', 'resource_utilizations', ['provider'], unique=False)
    op.create_index('ix_resource_utilizations_metric_name', 'resource_utilizations', ['metric_name'], unique=False)
    op.create_index('ix_resource_utilizations_id', 'resource_utilizations', ['id'], unique=False)
    op.create_index('ix_resource_utilizations_date', 'resource_utilizations', ['date'], unique=False)
    op.create_index('idx_utilization_service_metric_date', 'resource_utilizations', ['service', 'metric_name', 'date'], unique=False)
    op.create_index('idx_utilization_resource_metric_date', 'resource_utilizations', ['resource_id', 'metric_name', 'date'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('plan_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('current_period_start', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('current_period_end', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('cancel_at_period_end', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], name='subscriptions_plan_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='subscriptions_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='subscriptions_pkey')
    )
    op.create_index('ix_subscriptions_id', 'subscriptions', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('role_names', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('company', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('preferences', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('two_factor_enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('two_factor_secret', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('cloud_cost',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('service', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('cost', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('date', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('extra_data', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='cloud_cost_user_id_fkey', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='cloud_cost_pkey')
    )
    op.create_index('ix_cloud_cost_id', 'cloud_cost', ['id'], unique=False)
    op.create_table('optimization_policies',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('resource_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('service', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('criteria', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('parameters', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_automatic', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('approval_required', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='optimization_policies_pkey')
    )
    op.create_index('ix_optimization_policies_service', 'optimization_policies', ['service'], unique=False)
    op.create_index('ix_optimization_policies_resource_type', 'optimization_policies', ['resource_type'], unique=False)
    op.create_index('ix_optimization_policies_provider', 'optimization_policies', ['provider'], unique=False)
    op.create_index('ix_optimization_policies_name', 'optimization_policies', ['name'], unique=False)
    op.create_index('ix_optimization_policies_id', 'optimization_policies', ['id'], unique=False)
    op.create_index('ix_optimization_policies_enabled', 'optimization_policies', ['enabled'], unique=False)
    # ### end Alembic commands ###
